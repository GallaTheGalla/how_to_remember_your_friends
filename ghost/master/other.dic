OnTranslate
{
	_talk = reference0
	
	if reference1 == "" && reference2 == "" 
	{
		_talk = EVAL('"' + REPLACE(_talk,'"','""') + '"')
	}
	
	TOSTR(_talk)
}

OnAnchorSelect
{
	if "http://" _in_ reference0 || "https://" _in_ reference0; "\j[""%(reference0)""]"
}

OnKeyPress
{
	if reference0 == "f1"; "\![open,readme]"
	elseif reference0 == "t"; OnAiTalk
	elseif reference0 == "r"; OnLastTalk
}

OnSurfaceRestore
{
	"\1\s[10]\0\s[0]"
}

OnWindowStateRestore
{
	"\1\s[10]\0\s[0]"
}

//—————————————————————————————— User pronoun related ——————————————————————————————

they
{
	if SHIORI3FW.UserSex == "male"; "he"
	elseif SHIORI3FW.UserSex == "female"; "she"
	else; "they"
}

them
{
	if SHIORI3FW.UserSex == "male"; "him"
	elseif SHIORI3FW.UserSex == "female"; "her"
	else; "them"
}

their
{
	if SHIORI3FW.UserSex == "male"; "his"
	elseif SHIORI3FW.UserSex == "female"; "her"
	else; "their"
}

theirs
{
	if SHIORI3FW.UserSex == "male"; "his"
	elseif SHIORI3FW.UserSex == "female"; "hers"
	else; "theirs"
}

themself
{
	if SHIORI3FW.UserSex == "male"; "himself"
	elseif SHIORI3FW.UserSex == "female"; "herself"
	else; "themself"
}

//%(they) %(p('are','is'))
//You can change the name of this function if you want! I kept it short so it's fast to type
p
{
	if SHIORI3FW.UserSex == "undef"; _argv[0] //they are
	else; _argv[1] //he is/she is
}

/*

An example of the above setup:
"%(they) %(p('were','was')) looking for that earlier, I'll ask if %(they)'%(p('ve','s')) found it."

If using they, the %(p) functions will return the first word specified, resulting in:
"they were looking for that earlier, I'll ask if they've found it."

If not using they, for example if using she, it will return the second specified word instead, resulting in:
"she was looking for that earlier, I'll ask if she's found it."

With this function, you can quickly customize words that need to change based on whether it should be singular or plural. Just remember; the %(p) function is set up so that the first word you specify matches with the 'they' labels used on the pronoun functions. You can always switch that around if you like, too.

*/

//This just makes %(username) match with the username determined by the SSP prefs, rather than having to use the %username environment variable which is *not* the same and which you can't do things like TOUPPER to.
//If you want to have the user be able to set a nickname or something, you may want to change username to a variable instead and get rid of this!
username
{
	SHIORI3FW.UserName
}